{
  "compilerOptions": {
    /* Basic Options */
    "target": "ES2022", // Target modern ECMAScript features
    "module": "ESNext", // For .mjs output, compatible with moduleResolution: "Bundler"
    "moduleResolution": "Bundler", // Change to Bundler for esbuild
    "lib": ["ES2022", "DOM"], // Include ES2022 features and DOM types (useful for web-standard APIs Myst or its deps might use)
    "declaration": true, // Generate .d.ts files
    "declarationMap": true, // Generate source maps for .d.ts files
    "sourceMap": true, // Generate .js.map source map files
    "outDir": "./dist", // Output directory for compiled JavaScript
    "rootDir": "./src", // Specify root directory of source files
    "composite": false, // Set to false unless you have a multi-project setup with project references
    "importHelpers": false, // Not typically needed with modern TS

    /* Strict Type-Checking Options */
    "strict": true, // Enable all strict type-checking options
    "noImplicitAny": true, // Raise error on expressions and declarations with an implied 'any' type.
    "strictNullChecks": true, // Enable strict null checks
    "strictFunctionTypes": true, // Enable strict checking of function types.
    "strictBindCallApply": true, // Enable strict 'bind', 'call', and 'apply' methods on functions.
    "strictPropertyInitialization": true, // Ensure non-undefined class properties are initialized in the constructor.
    "noImplicitThis": true, // Raise error on 'this' expressions with an implied 'any' type.
    "alwaysStrict": true, // Parse in strict mode and emit "use strict" for each source file.

    /* Module Resolution Options */
    "resolveJsonModule": true, // Include modules imported with .json extension
    "esModuleInterop": true, // Enables emit interoperability between CommonJS and ES Modules
    "allowSyntheticDefaultImports": true, // Allow default imports from modules with no default export
    "allowImportingTsExtensions": false, // Important for `moduleResolution: "Bundler"`
    "noEmit": false, // Set to false: tsc will be used for type checking and declaration file generation

    /* Experimental Options */
    // "experimentalDecorators": true, // Uncomment if you use decorators
    // "emitDecoratorMetadata": true, // Uncomment if you use decorators with metadata

    /* Advanced Options */
    "skipLibCheck": true, // Skip type checking of all declaration files (*.d.ts).
    "forceConsistentCasingInFileNames": true, // Disallow inconsistently-cased references to the same file.
    "isolatedModules": true // Ensures each file can be safely transpiled without relying on other imports for type information (good for some bundlers)
  },
  "include": ["src/**/*"], // Which files to include in compilation
  "exclude": ["node_modules", "dist", "tests", "**/*.spec.ts", "**/*.test.ts"] // Which files to exclude
}
